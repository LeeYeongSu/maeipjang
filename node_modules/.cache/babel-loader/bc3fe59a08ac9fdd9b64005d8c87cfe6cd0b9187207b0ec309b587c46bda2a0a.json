{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\yawl1\\\\inputitem-app\\\\src\\\\components\\\\purchasemanagement.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PurchaseManagement = () => {\n  _s();\n  const [purchases, setPurchases] = useState(() => {\n    const saved = localStorage.getItem('purchases');\n    return saved ? JSON.parse(saved) : [];\n  });\n  const [purchaseForm, setPurchaseForm] = useState({\n    date: '',\n    productCode: '',\n    productName: '',\n    spec: '',\n    unit: '',\n    quantity: '',\n    price: '',\n    supplier: '',\n    note: ''\n  });\n  const [editIndex, setEditIndex] = useState(null);\n  const [searchTerm, setSearchTerm] = useState('');\n  const [filteredSuggestions, setFilteredSuggestions] = useState([]);\n  const fieldLabels = {\n    date: '날짜',\n    productCode: '제품코드',\n    productName: '제품명',\n    spec: '규격',\n    unit: '단위',\n    quantity: '수량',\n    price: '단가',\n    supplier: '매입처',\n    note: '창고명'\n  };\n  useEffect(() => {\n    localStorage.setItem('purchases', JSON.stringify(purchases));\n  }, [purchases]);\n\n  // 자동완성 기능: 입력값에 맞는 제품 코드 및 제품명 필터링\n  const handleInputChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setPurchaseForm(prev => ({\n      ...prev,\n      [name]: value\n    }));\n\n    // 자동완성 추천 항목 필터링 (제품 코드 및 제품명)\n    if (name === 'productCode' || name === 'productName') {\n      const suggestions = purchases.filter(item => item.productCode.toLowerCase().includes(value.toLowerCase()) || item.productName.toLowerCase().includes(value.toLowerCase()));\n      setFilteredSuggestions(suggestions);\n    }\n  };\n  const handleSubmit = e => {\n    e.preventDefault();\n    const newForm = {\n      ...purchaseForm,\n      quantity: parseFloat(purchaseForm.quantity) || 0,\n      price: parseFloat(purchaseForm.price) || 0\n    };\n    if (editIndex !== null) {\n      const updated = [...purchases];\n      updated[editIndex] = newForm;\n      setPurchases(updated);\n      setEditIndex(null);\n    } else {\n      setPurchases([...purchases, newForm]);\n    }\n    setPurchaseForm({\n      date: '',\n      productCode: '',\n      productName: '',\n      spec: '',\n      unit: '',\n      quantity: '',\n      price: '',\n      supplier: '',\n      note: ''\n    });\n  };\n\n  // 자동완성 항목 클릭 시 입력값 업데이트\n  const handleSuggestionClick = suggestion => {\n    setPurchaseForm(prev => ({\n      ...prev,\n      productCode: suggestion.productCode,\n      productName: suggestion.productName\n    }));\n    setFilteredSuggestions([]); // 추천 항목 숨기기\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      maxWidth: '1000px',\n      margin: 'auto',\n      padding: '20px'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"\\uB9E4\\uC785 \\uC790\\uB8CC \\uAD00\\uB9AC\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      style: {\n        display: 'grid',\n        gridTemplateColumns: '150px 1fr',\n        gap: '8px 16px',\n        alignItems: 'center'\n      },\n      children: [Object.entries(purchaseForm).map(([key, value]) => /*#__PURE__*/_jsxDEV(React.Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: key,\n          style: {\n            textAlign: 'right'\n          },\n          children: fieldLabels[key]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          id: key,\n          name: key,\n          value: value,\n          onChange: handleInputChange,\n          type: key === 'date' ? 'date' : 'text',\n          required: ['date', 'productCode', 'productName', 'quantity', 'price'].includes(key),\n          style: {\n            padding: '6px',\n            width: '250px'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 13\n        }, this), (key === 'productCode' || key === 'productName') && filteredSuggestions.length > 0 && /*#__PURE__*/_jsxDEV(\"ul\", {\n          style: {\n            listStyleType: 'none',\n            padding: 0,\n            margin: 0\n          },\n          children: filteredSuggestions.map((suggestion, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n            onClick: () => handleSuggestionClick(suggestion),\n            style: {\n              cursor: 'pointer',\n              padding: '4px',\n              border: '1px solid #ccc',\n              marginTop: '4px'\n            },\n            children: [suggestion.productCode, \" - \", suggestion.productName]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 19\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 15\n        }, this)]\n      }, key, true, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 11\n      }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          gridColumn: '2',\n          textAlign: 'left'\n        },\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: editIndex !== null ? '수정' : '등록'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 96,\n    columnNumber: 5\n  }, this);\n};\n_s(PurchaseManagement, \"csouA0tAVFysgdqskB0+BDVuNZ0=\");\n_c = PurchaseManagement;\nexport default PurchaseManagement;\nvar _c;\n$RefreshReg$(_c, \"PurchaseManagement\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","PurchaseManagement","_s","purchases","setPurchases","saved","localStorage","getItem","JSON","parse","purchaseForm","setPurchaseForm","date","productCode","productName","spec","unit","quantity","price","supplier","note","editIndex","setEditIndex","searchTerm","setSearchTerm","filteredSuggestions","setFilteredSuggestions","fieldLabels","setItem","stringify","handleInputChange","e","name","value","target","prev","suggestions","filter","item","toLowerCase","includes","handleSubmit","preventDefault","newForm","parseFloat","updated","handleSuggestionClick","suggestion","style","maxWidth","margin","padding","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","display","gridTemplateColumns","gap","alignItems","Object","entries","map","key","Fragment","htmlFor","textAlign","id","onChange","type","required","width","length","listStyleType","index","onClick","cursor","border","marginTop","gridColumn","_c","$RefreshReg$"],"sources":["C:/Users/yawl1/inputitem-app/src/components/purchasemanagement.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\n\r\nconst PurchaseManagement = () => {\r\n  const [purchases, setPurchases] = useState(() => {\r\n    const saved = localStorage.getItem('purchases');\r\n    return saved ? JSON.parse(saved) : [];\r\n  });\r\n\r\n  const [purchaseForm, setPurchaseForm] = useState({\r\n    date: '',\r\n    productCode: '',\r\n    productName: '',\r\n    spec: '',\r\n    unit: '',\r\n    quantity: '',\r\n    price: '',\r\n    supplier: '',\r\n    note: ''\r\n  });\r\n\r\n  const [editIndex, setEditIndex] = useState(null);\r\n  const [searchTerm, setSearchTerm] = useState('');\r\n  const [filteredSuggestions, setFilteredSuggestions] = useState([]);\r\n\r\n  const fieldLabels = {\r\n    date: '날짜',\r\n    productCode: '제품코드',\r\n    productName: '제품명',\r\n    spec: '규격',\r\n    unit: '단위',\r\n    quantity: '수량',\r\n    price: '단가',\r\n    supplier: '매입처',\r\n    note: '창고명'\r\n  };\r\n\r\n  useEffect(() => {\r\n    localStorage.setItem('purchases', JSON.stringify(purchases));\r\n  }, [purchases]);\r\n\r\n  // 자동완성 기능: 입력값에 맞는 제품 코드 및 제품명 필터링\r\n  const handleInputChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setPurchaseForm((prev) => ({ ...prev, [name]: value }));\r\n\r\n    // 자동완성 추천 항목 필터링 (제품 코드 및 제품명)\r\n    if (name === 'productCode' || name === 'productName') {\r\n      const suggestions = purchases.filter((item) =>\r\n        item.productCode.toLowerCase().includes(value.toLowerCase()) ||\r\n        item.productName.toLowerCase().includes(value.toLowerCase())\r\n      );\r\n      setFilteredSuggestions(suggestions);\r\n    }\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    const newForm = {\r\n      ...purchaseForm,\r\n      quantity: parseFloat(purchaseForm.quantity) || 0,\r\n      price: parseFloat(purchaseForm.price) || 0\r\n    };\r\n\r\n    if (editIndex !== null) {\r\n      const updated = [...purchases];\r\n      updated[editIndex] = newForm;\r\n      setPurchases(updated);\r\n      setEditIndex(null);\r\n    } else {\r\n      setPurchases([...purchases, newForm]);\r\n    }\r\n    setPurchaseForm({\r\n      date: '',\r\n      productCode: '',\r\n      productName: '',\r\n      spec: '',\r\n      unit: '',\r\n      quantity: '',\r\n      price: '',\r\n      supplier: '',\r\n      note: ''\r\n    });\r\n  };\r\n\r\n  // 자동완성 항목 클릭 시 입력값 업데이트\r\n  const handleSuggestionClick = (suggestion) => {\r\n    setPurchaseForm((prev) => ({\r\n      ...prev,\r\n      productCode: suggestion.productCode,\r\n      productName: suggestion.productName\r\n    }));\r\n    setFilteredSuggestions([]);  // 추천 항목 숨기기\r\n  };\r\n\r\n  return (\r\n    <div style={{ maxWidth: '1000px', margin: 'auto', padding: '20px' }}>\r\n      <h1>매입 자료 관리</h1>\r\n\r\n      <form onSubmit={handleSubmit} style={{ display: 'grid', gridTemplateColumns: '150px 1fr', gap: '8px 16px', alignItems: 'center' }}>\r\n        {Object.entries(purchaseForm).map(([key, value]) => (\r\n          <React.Fragment key={key}>\r\n            <label htmlFor={key} style={{ textAlign: 'right' }}>{fieldLabels[key]}</label>\r\n            <input\r\n              id={key}\r\n              name={key}\r\n              value={value}\r\n              onChange={handleInputChange}\r\n              type={key === 'date' ? 'date' : 'text'}\r\n              required={['date', 'productCode', 'productName', 'quantity', 'price'].includes(key)}\r\n              style={{ padding: '6px', width: '250px' }}\r\n            />\r\n            {(key === 'productCode' || key === 'productName') && filteredSuggestions.length > 0 && (\r\n              <ul style={{ listStyleType: 'none', padding: 0, margin: 0 }}>\r\n                {filteredSuggestions.map((suggestion, index) => (\r\n                  <li\r\n                    key={index}\r\n                    onClick={() => handleSuggestionClick(suggestion)}\r\n                    style={{ cursor: 'pointer', padding: '4px', border: '1px solid #ccc', marginTop: '4px' }}\r\n                  >\r\n                    {suggestion.productCode} - {suggestion.productName}\r\n                  </li>\r\n                ))}\r\n              </ul>\r\n            )}\r\n          </React.Fragment>\r\n        ))}\r\n        <div style={{ gridColumn: '2', textAlign: 'left' }}>\r\n          <button type=\"submit\">{editIndex !== null ? '수정' : '등록'}</button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PurchaseManagement;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,MAAMC,kBAAkB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC/B,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGP,QAAQ,CAAC,MAAM;IAC/C,MAAMQ,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,WAAW,CAAC;IAC/C,OAAOF,KAAK,GAAGG,IAAI,CAACC,KAAK,CAACJ,KAAK,CAAC,GAAG,EAAE;EACvC,CAAC,CAAC;EAEF,MAAM,CAACK,YAAY,EAAEC,eAAe,CAAC,GAAGd,QAAQ,CAAC;IAC/Ce,IAAI,EAAE,EAAE;IACRC,WAAW,EAAE,EAAE;IACfC,WAAW,EAAE,EAAE;IACfC,IAAI,EAAE,EAAE;IACRC,IAAI,EAAE,EAAE;IACRC,QAAQ,EAAE,EAAE;IACZC,KAAK,EAAE,EAAE;IACTC,QAAQ,EAAE,EAAE;IACZC,IAAI,EAAE;EACR,CAAC,CAAC;EAEF,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGzB,QAAQ,CAAC,IAAI,CAAC;EAChD,MAAM,CAAC0B,UAAU,EAAEC,aAAa,CAAC,GAAG3B,QAAQ,CAAC,EAAE,CAAC;EAChD,MAAM,CAAC4B,mBAAmB,EAAEC,sBAAsB,CAAC,GAAG7B,QAAQ,CAAC,EAAE,CAAC;EAElE,MAAM8B,WAAW,GAAG;IAClBf,IAAI,EAAE,IAAI;IACVC,WAAW,EAAE,MAAM;IACnBC,WAAW,EAAE,KAAK;IAClBC,IAAI,EAAE,IAAI;IACVC,IAAI,EAAE,IAAI;IACVC,QAAQ,EAAE,IAAI;IACdC,KAAK,EAAE,IAAI;IACXC,QAAQ,EAAE,KAAK;IACfC,IAAI,EAAE;EACR,CAAC;EAEDtB,SAAS,CAAC,MAAM;IACdQ,YAAY,CAACsB,OAAO,CAAC,WAAW,EAAEpB,IAAI,CAACqB,SAAS,CAAC1B,SAAS,CAAC,CAAC;EAC9D,CAAC,EAAE,CAACA,SAAS,CAAC,CAAC;;EAEf;EACA,MAAM2B,iBAAiB,GAAIC,CAAC,IAAK;IAC/B,MAAM;MAAEC,IAAI;MAAEC;IAAM,CAAC,GAAGF,CAAC,CAACG,MAAM;IAChCvB,eAAe,CAAEwB,IAAI,KAAM;MAAE,GAAGA,IAAI;MAAE,CAACH,IAAI,GAAGC;IAAM,CAAC,CAAC,CAAC;;IAEvD;IACA,IAAID,IAAI,KAAK,aAAa,IAAIA,IAAI,KAAK,aAAa,EAAE;MACpD,MAAMI,WAAW,GAAGjC,SAAS,CAACkC,MAAM,CAAEC,IAAI,IACxCA,IAAI,CAACzB,WAAW,CAAC0B,WAAW,CAAC,CAAC,CAACC,QAAQ,CAACP,KAAK,CAACM,WAAW,CAAC,CAAC,CAAC,IAC5DD,IAAI,CAACxB,WAAW,CAACyB,WAAW,CAAC,CAAC,CAACC,QAAQ,CAACP,KAAK,CAACM,WAAW,CAAC,CAAC,CAC7D,CAAC;MACDb,sBAAsB,CAACU,WAAW,CAAC;IACrC;EACF,CAAC;EAED,MAAMK,YAAY,GAAIV,CAAC,IAAK;IAC1BA,CAAC,CAACW,cAAc,CAAC,CAAC;IAClB,MAAMC,OAAO,GAAG;MACd,GAAGjC,YAAY;MACfO,QAAQ,EAAE2B,UAAU,CAAClC,YAAY,CAACO,QAAQ,CAAC,IAAI,CAAC;MAChDC,KAAK,EAAE0B,UAAU,CAAClC,YAAY,CAACQ,KAAK,CAAC,IAAI;IAC3C,CAAC;IAED,IAAIG,SAAS,KAAK,IAAI,EAAE;MACtB,MAAMwB,OAAO,GAAG,CAAC,GAAG1C,SAAS,CAAC;MAC9B0C,OAAO,CAACxB,SAAS,CAAC,GAAGsB,OAAO;MAC5BvC,YAAY,CAACyC,OAAO,CAAC;MACrBvB,YAAY,CAAC,IAAI,CAAC;IACpB,CAAC,MAAM;MACLlB,YAAY,CAAC,CAAC,GAAGD,SAAS,EAAEwC,OAAO,CAAC,CAAC;IACvC;IACAhC,eAAe,CAAC;MACdC,IAAI,EAAE,EAAE;MACRC,WAAW,EAAE,EAAE;MACfC,WAAW,EAAE,EAAE;MACfC,IAAI,EAAE,EAAE;MACRC,IAAI,EAAE,EAAE;MACRC,QAAQ,EAAE,EAAE;MACZC,KAAK,EAAE,EAAE;MACTC,QAAQ,EAAE,EAAE;MACZC,IAAI,EAAE;IACR,CAAC,CAAC;EACJ,CAAC;;EAED;EACA,MAAM0B,qBAAqB,GAAIC,UAAU,IAAK;IAC5CpC,eAAe,CAAEwB,IAAI,KAAM;MACzB,GAAGA,IAAI;MACPtB,WAAW,EAAEkC,UAAU,CAAClC,WAAW;MACnCC,WAAW,EAAEiC,UAAU,CAACjC;IAC1B,CAAC,CAAC,CAAC;IACHY,sBAAsB,CAAC,EAAE,CAAC,CAAC,CAAE;EAC/B,CAAC;EAED,oBACE1B,OAAA;IAAKgD,KAAK,EAAE;MAAEC,QAAQ,EAAE,QAAQ;MAAEC,MAAM,EAAE,MAAM;MAAEC,OAAO,EAAE;IAAO,CAAE;IAAAC,QAAA,gBAClEpD,OAAA;MAAAoD,QAAA,EAAI;IAAQ;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAEjBxD,OAAA;MAAMyD,QAAQ,EAAEhB,YAAa;MAACO,KAAK,EAAE;QAAEU,OAAO,EAAE,MAAM;QAAEC,mBAAmB,EAAE,WAAW;QAAEC,GAAG,EAAE,UAAU;QAAEC,UAAU,EAAE;MAAS,CAAE;MAAAT,QAAA,GAC/HU,MAAM,CAACC,OAAO,CAACrD,YAAY,CAAC,CAACsD,GAAG,CAAC,CAAC,CAACC,GAAG,EAAEhC,KAAK,CAAC,kBAC7CjC,OAAA,CAACJ,KAAK,CAACsE,QAAQ;QAAAd,QAAA,gBACbpD,OAAA;UAAOmE,OAAO,EAAEF,GAAI;UAACjB,KAAK,EAAE;YAAEoB,SAAS,EAAE;UAAQ,CAAE;UAAAhB,QAAA,EAAEzB,WAAW,CAACsC,GAAG;QAAC;UAAAZ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,eAC9ExD,OAAA;UACEqE,EAAE,EAAEJ,GAAI;UACRjC,IAAI,EAAEiC,GAAI;UACVhC,KAAK,EAAEA,KAAM;UACbqC,QAAQ,EAAExC,iBAAkB;UAC5ByC,IAAI,EAAEN,GAAG,KAAK,MAAM,GAAG,MAAM,GAAG,MAAO;UACvCO,QAAQ,EAAE,CAAC,MAAM,EAAE,aAAa,EAAE,aAAa,EAAE,UAAU,EAAE,OAAO,CAAC,CAAChC,QAAQ,CAACyB,GAAG,CAAE;UACpFjB,KAAK,EAAE;YAAEG,OAAO,EAAE,KAAK;YAAEsB,KAAK,EAAE;UAAQ;QAAE;UAAApB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC3C,CAAC,EACD,CAACS,GAAG,KAAK,aAAa,IAAIA,GAAG,KAAK,aAAa,KAAKxC,mBAAmB,CAACiD,MAAM,GAAG,CAAC,iBACjF1E,OAAA;UAAIgD,KAAK,EAAE;YAAE2B,aAAa,EAAE,MAAM;YAAExB,OAAO,EAAE,CAAC;YAAED,MAAM,EAAE;UAAE,CAAE;UAAAE,QAAA,EACzD3B,mBAAmB,CAACuC,GAAG,CAAC,CAACjB,UAAU,EAAE6B,KAAK,kBACzC5E,OAAA;YAEE6E,OAAO,EAAEA,CAAA,KAAM/B,qBAAqB,CAACC,UAAU,CAAE;YACjDC,KAAK,EAAE;cAAE8B,MAAM,EAAE,SAAS;cAAE3B,OAAO,EAAE,KAAK;cAAE4B,MAAM,EAAE,gBAAgB;cAAEC,SAAS,EAAE;YAAM,CAAE;YAAA5B,QAAA,GAExFL,UAAU,CAAClC,WAAW,EAAC,KAAG,EAACkC,UAAU,CAACjC,WAAW;UAAA,GAJ7C8D,KAAK;YAAAvB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAKR,CACL;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACA,CACL;MAAA,GAvBkBS,GAAG;QAAAZ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAwBR,CACjB,CAAC,eACFxD,OAAA;QAAKgD,KAAK,EAAE;UAAEiC,UAAU,EAAE,GAAG;UAAEb,SAAS,EAAE;QAAO,CAAE;QAAAhB,QAAA,eACjDpD,OAAA;UAAQuE,IAAI,EAAC,QAAQ;UAAAnB,QAAA,EAAE/B,SAAS,KAAK,IAAI,GAAG,IAAI,GAAG;QAAI;UAAAgC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAS;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC9D,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACF,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACJ,CAAC;AAEV,CAAC;AAACtD,EAAA,CAlIID,kBAAkB;AAAAiF,EAAA,GAAlBjF,kBAAkB;AAoIxB,eAAeA,kBAAkB;AAAC,IAAAiF,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}